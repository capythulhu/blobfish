const fs = require('fs');

exports.command = 'sync'
exports.desc = 'Sync files from .blobfish file to your project'
exports.options = {
    token: {
        alias: 't',
        describe: 'Github Token',
        type: 'string',
    },
    verbose: {
        alias: 'v',
        describe: 'Verbose output',
        type: 'boolean',
    }
}

exports.handler = async (argv) => {
    // Check if GH_TOKEN is passed as an argument
    const token = argv.token || argv.t || process.env.GH_TOKEN;
    if (!token) {
        console.error('游냐 GH_TOKEN is required. Please pass it as an argument using --token or set it as GH_TOKEN environment variable.');
        process.exit(1);
    }

    // Check if verbose is passed as an argument
    const verbose = argv.verbose || argv.v || false;

    // Check if .blobfish file exists
    if (!fs.existsSync('.blobfish')) {
        console.error('游냐 No .blobfish file detected. Run blobfish init first, or crete it manually.');
        process.exit(1);
    }

    // Read .blobfish file
    var blobfish = JSON.parse(fs.readFileSync('.blobfish', 'utf8'));

    // Validate .blobfish file
    const error = '游냐 Invalid .blobfish file. Please check the documentation.'
    if (!Array.isArray(blobfish)) {
        console.error(error);
        process.exit(1);
    }
    for (const repository of blobfish) {
        if (!repository.repo) {
            console.error(error);
            process.exit(1);
        }
        if (!repository.files) {
            console.error(error);
            process.exit(1);
        }
        if (!Array.isArray(repository.files)) {
            console.error(error);
            process.exit(1);
        }
        for (const file of repository.files) {
            if (typeof file !== 'string' && typeof file !== 'object') {
                console.error(error);
                process.exit(1);
            }
            if (typeof file === 'object') {
                if (!file.from || !file.to) {
                    console.error(error);
                    process.exit(1);
                }
            }
        }
    }

    // Sync files
    var totalFiles = 0;
    var syncedFiles = 0;
    for (const repository of blobfish) {
        for (const file of repository.files) {
            totalFiles++;
            var from, to
            if (typeof file === 'string') {
                from = to = file;
            } else if (typeof file === 'object') {
                from = file.from;
                to = file.to;
            }

            if (verbose) {
                console.log(`游냐 Syncing ${from} from ${repository.repo} to ${to}`);
            }

            const apiUrl = `https://api.github.com/repos/${repository.repo}/contents/${from}`;
            const headers = {
            Authorization: `token ${token}`,
            };
            try {
                const res = await fetch(apiUrl, { headers });
                if (res.status !== 200) {
                    switch (res.status) {
                        case 401:
                            console.error(`游냐 Invalid token. Please check your GH_TOKEN environment variable or --token argument.`);
                            break;
                        case 404:
                            console.error(`游냐 Repository ${repository.repo} or file ${from} not found.`);
                            break;
                        default:
                            console.error(`游냐 Error while fetching ${apiUrl}: ${res.status} ${res.statusText}`);
                            break;
                    }
                    continue
                }
                const json = await res.json();
                const content = Buffer.from(json.content, "base64").toString("utf-8");

                // Create the directory if it doesn't exist
                const path = to.split('/');
                path.pop();
                fs.mkdirSync(`./${path.join('/')}`, { recursive: true });

                // Write the file
                fs.writeFileSync(
                `./${to}`,
                `// 游냐 THIS FILE IS AUTOGENERATED, please do not edit manually. 游냐 
// This is intended to represent an exact copy of:
// https://github.com/${repository.repo}/blob/main/${from}

// Once you commit your changes on that repository, run:
// blobfish sync
// and commit the changes on this repo too.
${content}`,
                "utf-8"
                );
            } catch (e) {
                console.error(`游냐 Error while fetching ${apiUrl}: ${e}`);
                continue
            }
            syncedFiles++;

            if (verbose) {
                console.log(`游냐 Synced ${from} from ${repository.repo} to ${to}`);
            }
        }

        if (verbose) {
            console.log(`游냐 Synced ${repository.repo}`);
        }
    }

    console.log(`游냐 Synced ${syncedFiles} out of ${totalFiles} files!`);
}